package com.example.logo

import android.content.ContentValues.TAG
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.util.Log
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.ktx.firestore
import com.google.firebase.ktx.Firebase
import kotlinx.coroutines.delay
import com.google.firebase.firestore.DocumentReference




class MemInfo : AppCompatActivity() {
    private lateinit var auth: FirebaseAuth; // 파이어베이스
    val db = Firebase.firestore
    override fun onCreate(savedInstanceState: Bundle?) {
        setContentView(R.layout.activity_mem_info)
        super.onCreate(savedInstanceState)
        auth = FirebaseAuth.getInstance()

        var idTxt =findViewById<TextView>(R.id.idText)
        var pwText =findViewById<TextView>(R.id.pwText)
        var heightText =findViewById<TextView>(R.id.heightText)
        var weighttext =findViewById<TextView>(R.id.weightText)
        var pwInsert=findViewById<EditText>(R.id.pwInsert)
        var wInsert=findViewById<EditText>(R.id.winsert)
        var hInsert=findViewById<EditText>(R.id.hInsert)
        var pwBtn=findViewById<Button>(R.id.pwBtn)
        var wBtn=findViewById<Button>(R.id.wBtn)
        var hBtn=findViewById<Button>(R.id.hBtn)
        var outMemBtn=findViewById<Button>(R.id.outMemBtn)


        db.collection("users")
            .get()
            .addOnSuccessListener { result ->
                lateinit var documentId : String
                for (document in result) { // 가져온 문서들이 result로 들어감
                    Log.d(TAG, "${document.id} => ${document.data}")
                    //유저 데이터 가져오기

                    if(document["email"] == intent.getStringExtra("id")){
                        documentId = document.id
                    }

                    val user_data = FireStore(
                        document["email"] as String,
                        document["exp"] as Long,
                        document["level"] as Long,
                        document["height"] as Long,
                        document["weight"] as Long,
                        document["count"] as Long,
                        document["time"] as String,
                        document["nextTime"] as String
                    )
                    if (user_data.email.equals(intent.getStringExtra("id"))){
                        idTxt.setText(user_data.email)
                        pwText.setText(intent.getStringExtra("pw").toString())
                        heightText.setText(user_data.height.toString())
                        weighttext.setText(user_data.weight.toString())
                        pwBtn.setOnClickListener {
                            if((pwInsert.text.toString()!=intent.getStringExtra("pw"))&&(pwInsert.text.toString().length>5)){//비밀번호 변경
                                auth?.currentUser?.updatePassword(pwInsert.text.toString())?.addOnCompleteListener(this){
                                    Toast.makeText(this@MemInfo, "변경완료", Toast.LENGTH_SHORT).show()
                                    pwText.setText(pwInsert.text)
                                }
                            }
                            else{
                                pwInsert.setHint("제대로입력!")
                            }
                        }
                        wBtn.setOnClickListener{//몸무게 변경
                            if(wInsert.text.toString().length>0){
                                user_data.weight=wInsert.text.toString().toLong()
                                val db_ref = db.collection("users").document(document.id) // 데이터 경로 설정
                                db_ref.set(user_data) // 수정된 데이터 삽입
                                idTxt.setText(user_data.email)
                                pwText.setText(intent.getStringExtra("pw").toString())
                                heightText.setText(user_data.height.toString())
                                weighttext.setText(user_data.weight.toString())
                            }
                            else{
                                wInsert.setHint("제대로입력!")
                            }
                        }
                        hBtn.setOnClickListener {//키변경
                            if(hInsert.text.toString().length>0){
                                user_data.height=hInsert.text.toString().toLong()
                                val db_ref = db.collection("users").document(document.id) // 데이터 경로 설정
                                db_ref.set(user_data) // 수정된 데이터 삽입
                                idTxt.setText(user_data.email)
                                pwText.setText(intent.getStringExtra("pw").toString())
                                heightText.setText(user_data.height.toString())
                                weighttext.setText(user_data.weight.toString())
                            }
                            else{
                                hInsert.setHint("제대로입력!")
                            }
                        }
                        outMemBtn.setOnClickListener{
                            db.collection("users").document(documentId).delete()
                            auth?.currentUser?.delete()?.addOnCompleteListener(this){
                                    if(it.isSuccessful){

                                        Toast.makeText(this@MemInfo, "삭제완료, 잠시후 로그인 화면으로 이동", Toast.LENGTH_SHORT).show()
                                        Handler().postDelayed({
                                            var intent = Intent(this, MainActivity::class.java)
                                            startActivity(intent)
                                        }, 1000L)
                                    }
                            }

                        }
                        break // 로그인한 이메일 찾았으면 데이터베이스 탐색중지
                    }
                }
            }
    }
}
